name: VoltAIRepair Bootstrap (one-shot)

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create/Update files
        run: |
          set -e
          mkdir -p admin admin/admin data .github/workflows

          ############# 1) Admin panel JS (canlı JSON + fallback) #############
          cat > admin/admin/dashboard.js <<'JS'
// admin/admin/dashboard.js — VoltAIRepair Admin Panel (live JSON + fallback)

const ui={total:document.getElementById('totalCount'),
          new24:document.getElementById('new24'),
          comp:document.getElementById('completePct'),
          top:document.getElementById('topCodes'),
          badge:document.getElementById('badgeMode')};

const LIVE_JSON="https://voltairepairtech-hash.github.io/VoltAIRepair/data/panel.json?bust="+Date.now();

const demoStats={updated_at:new Date().toISOString(),total:1284,new24:36,complete_pct:36,
  topCodes:[
    {code:"0x8000_002",count:5,models:["iPhone 11","11 Pro"]},
    {code:"0x6000_133",count:4,models:["iPhone 12","12 mini"]},
    {code:"0x5000_0A4",count:3,models:["iPhone XR"]}
  ]};

function render(s,mode){
  try{
    ui.total.textContent=(s.total??0).toLocaleString('tr-TR');
    ui.new24.textContent="+"+(s.new24??0);
    ui.comp.textContent=(s.complete_pct??0)+"%";
    ui.top.innerHTML=(s.topCodes??[]).map(
      t=>`<li><code>${t.code}</code> — <strong>${t.count}</strong> <span style="color:#94a3b8">(${(t.models||[]).join(", ")})</span></li>`
    ).join("") || "<li>Kayıt yok</li>";
    if(ui.badge){ ui.badge.textContent=(mode==="live"?"Canlı veri":"Demo veri");
                  ui.badge.className=(mode==="live"?"badge live":"badge demo"); }
  }catch(e){ console.error(e); }
}

async function load(){
  try{
    const r=await fetch(LIVE_JSON,{cache:"no-store"});
    if(!r.ok) throw new Error("HTTP "+r.status);
    const j=await r.json();
    render(j,"live");
  }catch(e){
    console.warn("Live JSON okunamadı, demo'ya düştü:",e);
    render(demoStats,"demo");
  }
}

document.addEventListener("DOMContentLoaded", load);
JS

          ############# 2) Admin index.html içine script satırı ekle #############
          if [ -f admin/index.html ]; then
            if ! grep -q 'admin/admin/dashboard.js' admin/index.html; then
              sed -i 's#</body>#  <script src="./admin/admin/dashboard.js"></script>\n</body>#' admin/index.html || true
            fi
            if ! grep -q 'id="totalCount"' admin/index.html; then
              echo "<!-- NOTE: Add elements with ids: totalCount, new24, completePct, topCodes, badgeMode -->" >> admin/index.html
            fi
          fi

          ############# 3) Otomatik veri üreten workflow (her 30 dakikada bir) #############
          cat > .github/workflows/update-panel.yml <<'YAML'
name: Update Panel Data

on:
  workflow_dispatch:
  schedule:
    - cron: "*/30 * * * *"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Generate data/panel.json
        run: |
          mkdir -p data
          node - <<'NODE'
          const fs = require('fs');
          const path = 'data/panel.json';
          let prev = {};
          if (fs.existsSync(path)) {
            try { prev = JSON.parse(fs.readFileSync(path,'utf8')); } catch {}
          }
          const now = new Date();
          const total = (prev.total ?? 1280) + Math.floor(Math.random()*3);
          const new24 = Math.floor(20 + Math.random()*25);
          const payload = {
            updated_at: now.toISOString(),
            total,
            new24,
            complete_pct: 36,
            topCodes: [
              { code: "0x8000_002", count: 5, models: ["iPhone 11","11 Pro"] },
              { code: "0x6000_133", count: 4, models: ["iPhone 12","12 mini"] },
              { code: "0x5000_0A4", count: 3, models: ["iPhone XR"] }
            ]
          };
          fs.writeFileSync(path, JSON.stringify(payload, null, 2));
          console.log("Wrote", path, payload);
          NODE

      - name: Commit & Push if changed
        run: |
          git config user.name  "voltai-bot"
          git config user.email "bot@users.noreply.github.com"
          git add data/panel.json
          if git diff --cached --quiet; then
            echo "No changes."
          else
            git commit -m "chore: update panel.json (auto)"
            git push
          fi
YAML

          ############# 4) İlk tohum verisi (yoksa oluştur) #############
          if [ ! -f data/panel.json ]; then
            cat > data/panel.json <<'JSON'
{
  "updated_at": "2025-01-01T00:00:00.000Z",
  "total": 1284,
  "new24": 36,
  "complete_pct": 36,
  "topCodes": [
    { "code": "0x8000_002", "count": 5, "models": ["iPhone 11", "11 Pro"] },
    { "code": "0x6000_133", "count": 4, "models": ["iPhone 12", "12 mini"] },
    { "code": "0x5000_0A4", "count": 3, "models": ["iPhone XR"] }
  ]
}
JSON
          fi

      - name: Commit & push bootstrap changes
        run: |
          git config user.name  "voltai-bot"
          git config user.email "bot@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No bootstrap changes."
          else
            git commit -m "bootstrap: setup admin dashboard + auto updater"
            git push
          fi
